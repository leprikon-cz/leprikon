#!/bin/bash

if [ -n "$LEPRIKON_DOMAIN" ]; then
    LETSENCRYPT_DIR=${LETSENCRYPT_DIR:-/app/data/letsencrypt}

    # setup letsencrypt certificate
    certbot certonly --config-dir ${LETSENCRYPT_DIR} --non-interactive \
       --agree-tos --allow-subset-of-names --expand --keep --nginx \
       --register-unsafely-without-email --cert-name $LEPRIKON_DOMAIN -d $LEPRIKON_DOMAIN \
        $(for d in $LEPRIKON_DOMAIN_ALIASES; do echo "-d $d"; done)
    kill 2>/dev/null $(</run/nginx.pid)

    # listen directly on both http and https ports
    # perform redirects from http or domain aliases
    # enable gzip compression
    cat > /app/run/nginx.generated.conf <<EOF
    listen 0:80;
    listen [::]:80;
    listen 0:443 ssl http2;
    listen [::]:443 ssl http2;

    ssl_certificate ${LETSENCRYPT_DIR}/live/${LEPRIKON_DOMAIN}/fullchain.pem;
    ssl_certificate_key ${LETSENCRYPT_DIR}/live/${LEPRIKON_DOMAIN}/privkey.pem;
    ssl_dhparam ${LETSENCRYPT_DIR}/ssl-dhparams.pem;
    include ${LETSENCRYPT_DIR}/options-ssl-nginx.conf;

    server_name ${LEPRIKON_DOMAIN} ${LEPRIKON_DOMAIN_ALIASES};

    location /.well-known {
        root /app/htdocs;
    }

    if (\$host != ${LEPRIKON_DOMAIN}) {
        rewrite ^/(.*)$ https://${LEPRIKON_DOMAIN}/\$1 permanent;
    }
    if (\$scheme != https) {
        rewrite ^/(.*)$ https://${LEPRIKON_DOMAIN}/\$1 permanent;
    }

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript;
EOF
else
    # only listen on ipv4 http port and expect reverse proxy
    # to perform ssl termination, redirects, and compression
    cat > /app/run/nginx.generated.conf <<EOF
    listen 0:80;

    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Real-IP;
    real_ip_recursive on;

    gzip off;
EOF
fi

# run nginx server
exec nginx -g "daemon off;" -c "${NGINX_CONF:-/app/conf/nginx.conf}"
